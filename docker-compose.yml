version: '3'

services:
  haproxy:
    build: docker-haproxy-nginx/haproxy/
    depends_on:
     - nginx1
     - nginx2
     - nginx3 
    ports:
     - '8080:8080'

  nginx1:
    build: docker-haproxy-nginx/nginx/
    depends_on:
      - logstash
    volumes:
      - ./nginx/log:/var/log/nginx

  nginx2:
    build: ./docker-haproxy-nginx/nginx/.
    depends_on:
      - logstash
    volumes:
      - ./nginx/log:/var/log/nginx

  nginx3:
    build: ./docker-haproxy-nginx/nginx/.
    depends_on:
      - logstash
    volumes:
      - ./nginx/log:/var/log/nginx

  logstash:
    build:
      context: logstash/
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./nginx/log:/var/log/nginx
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ./elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  kibana:
    build:
      context: kibana/
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch